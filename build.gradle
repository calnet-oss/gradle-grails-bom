/**
 * Copyright (c) 2016, Regents of the University of California and
 * contributors.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// We use the buildscript {} style rather than the plugins {} style for the
// Spring Dependency Management plugin so that we can set the
// spring_depmgmt_version property in gradle.properties.  Using properties
// in plugins {} isn't possible.
buildscript {
    repositories {
        mavenLocal()
        // If using a Maven proxy, put the property settings in
        // ~/.gradle/gradle.properties for default_proxy_url,
        // default_proxy_username and default_proxy_password.
        if (project.hasProperty("default_proxy_url")) {
            maven {
                url project.property("default_proxy_url")
                credentials {
                    username project.property("default_proxy_username")
                    password project.property("default_proxy_password")
                }
            }
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:${spring_depmgmt_version}"
    }
}

group = 'edu.berkeley.calnet'
version = '2.5.5' // match with the Grails version

apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'

dependencyManagement {
    dependencies {
        /*******************************************************************
         * BEGIN STANDARD GRAILS DEPENDENCIES
         ******************************************************************/
        // The versions in this section should match what is generated by
        // the bin/generateDependencyMgmtBlock.sh script for a particular
        // Grails version, which finds the standard top-level dependencies
        // for "grails create-app" and "grails create-plugin" and using
        // "grails dependency-report".
        dependency "cglib:cglib-nodep:2.2.2"
        dependency "com.h2database:h2:1.3.176"
        dependency "javax.servlet:javax.servlet-api:3.0.1"
        dependency "junit:junit:4.12"
        dependency "log4j:log4j:1.2.17"
        dependency "org.codehaus.groovy:groovy-all:2.4.4"
        dependency "org.grails:grails-core:2.5.5"
        dependency "org.grails:grails-bootstrap:2.5.5"
        dependency "org.grails:grails-datastore-test-support:1.0.2-grails-2.4"
        dependency "org.grails:grails-docs:2.5.5"
        dependency "org.grails:grails-plugin-async:2.5.5"
        dependency "org.grails:grails-plugin-databinding:2.5.5"
        dependency "org.grails:grails-dependencies:2.5.5"
        dependency "org.grails:grails-plugin-filters:2.5.5"
        dependency "org.grails:grails-plugin-gsp:2.5.5"
        dependency "org.grails:grails-plugin-i18n:2.5.5"
        dependency "org.grails:grails-plugin-log4j:2.5.5"
        dependency "org.grails:grails-plugin-rest:2.5.5"
        dependency "org.grails:grails-plugin-services:2.5.5"
        dependency "org.grails:grails-plugin-servlets:2.5.5"
        dependency "org.grails:grails-plugin-testing:2.5.5"
        dependency "org.grails:grails-plugin-url-mappings:2.5.5"
        dependency "org.grails:grails-project-api:2.5.5"
        dependency "org.grails:grails-resources:2.5.5"
        dependency "org.grails:grails-scripts:2.5.5"
        dependency "org.grails.plugins:asset-pipeline:2.5.7"
        dependency "org.grails.plugins:cache:1.1.8"
        dependency "org.grails.plugins:database-migration:1.4.0"
        dependency "org.grails.plugins:hibernate4:4.3.10"
        dependency "org.grails.plugins:jquery:1.11.1"
        dependency "org.grails.plugins:release:3.1.2"
        dependency "org.grails.plugins:rest-client-builder:2.1.1"
        dependency "org.grails.plugins:scaffolding:2.1.2"
        dependency "org.grails.plugins:tomcat:7.0.70"
        dependency "org.spockframework:spock-core:1.0-groovy-2.4"
        dependency "xalan:serializer:2.7.2"

        // Extras that we add manually
        // resources plugin is an alternative to assert-pipeline
        dependency 'org.grails.plugins:resources:1.2.14'
        /*******************************************************************
         * END STANDARD GRAILS DEPENDENCIES
         ******************************************************************/
    }
}

publishing {
    publications {
        maven(MavenPublication) {
        }
    }

    repositories {
        maven {
            // Put the property settings in ~/.gradle/gradle.properties for
            // default_deploy_url, default_deploy_lib_repo
            // default_deploy_username and default_deploy_password.
            url "${project.property('default_deploy_url')}/${default_deploy_lib_repo}"
            credentials {
                username project.property("default_deploy_user")
                password project.property("default_deploy_password")
            }
        }
    }
}
